syntax = "v1"

info (
	title:   "用户微服务 API"
	desc:    "提供用户注册、登录、信息管理等功能"
	author:  "semon"
	email:   "semon@example.com"
	version: "v1"
)

// 用户信息模型
type UserInfo {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	Email    string `json:"email"`
	Phone    string `json:"phone,omitempty"`
	Avatar   string `json:"avatar,omitempty"`
	Gender   string `json:"gender,omitempty"` // male, female, other
	Birthday string `json:"birthday,omitempty"`
	Address  string `json:"address,omitempty"`
	CreateAt string `json:"createAt"`
	UpdateAt string `json:"updateAt"`
}

// 用户注册请求
type RegisterRequest {
	Username string `json:"username"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Phone    string `json:"phone,omitempty"`
}

// 用户注册响应
type RegisterResponse {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	Email    string `json:"email"`
}

// 用户登录请求
type LoginRequest {
	Username string `json:"username"`
	Password string `json:"password"`
}

// 用户登录响应
type LoginResponse {
	Token     string   `json:"token"`
	ExpiresAt int64    `json:"expiresAt"`
	UserInfo  UserInfo `json:"userInfo"`
}

// 获取用户信息请求
type GetUserInfoRequest {
	Id int64 `path:"id"`
}

// 获取用户信息响应
type GetUserInfoResponse {
	UserInfo UserInfo `json:"userInfo"`
}

// 更新用户信息请求
type UpdateUserInfoRequest {
	Id       int64  `json:"id"`
	Phone    string `json:"phone,omitempty"`
	Avatar   string `json:"avatar,omitempty"`
	Gender   string `json:"gender,omitempty"`
	Birthday string `json:"birthday,omitempty"`
	Address  string `json:"address,omitempty"`
}

// 更新用户信息响应
type UpdateUserInfoResponse {
	UserInfo UserInfo `json:"userInfo"`
}

// 修改密码请求
type ChangePasswordRequest {
	Id          int64  `json:"id"`
	OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

// 修改密码响应
type ChangePasswordResponse {
	Success bool `json:"success"`
}

// 通用响应
type Response {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data,omitempty"`
}

@server (
	prefix: /api/v1
)
service user-api {
	// 用户注册
	@handler RegisterHandler
	post /user/register (RegisterRequest) returns (RegisterResponse)

	// 用户登录
	@handler LoginHandler
	post /user/login (LoginRequest) returns (LoginResponse)

	// 获取用户信息
	@handler GetUserInfoHandler
	get /user/:id (GetUserInfoRequest) returns (GetUserInfoResponse)

	// 更新用户信息
	@handler UpdateUserInfoHandler
	put /user (UpdateUserInfoRequest) returns (UpdateUserInfoResponse)

	// 修改密码
	@handler ChangePasswordHandler
	put /user/password (ChangePasswordRequest) returns (ChangePasswordResponse)
}

